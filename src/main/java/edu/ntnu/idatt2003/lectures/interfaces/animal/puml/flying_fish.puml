@startuml

abstract class Animal {
  -name: String
  -birthDate: LocalDate
  +Animal(name: String, birthDate: LocalDate)
  +canMove(): boolean
  +getName(): String
  +getAge(): float
  +compareTo(anotherAnimal: Animal): int
}

class Fish {
  -waterType: String
  +Fish(name: String, birthDate: LocalDate, waterType: String)
  +getWaterType(): String
  +canEat(): boolean
  +canSwim(): boolean
  +hashCode(): int
  +equals(obj: Object): boolean
  +toString(): String
}

class FlyingFish {
  -finSize: double
  +FlyingFish(name: String, birthDate: LocalDate, waterType: String, finSize: double)
  +getFinSize(): double
  +canFly(): boolean
  +hashCode(): int
  +equals(obj: Object): boolean
  +toString(): String
}

interface Comparable {
  +compareTo(T: T): int
}

interface Moveable {
  +canMove(): boolean
}

interface Swimable {
  +canSwim(): boolean
}

interface Eatable {
  +canEat(): boolean
}

interface Flyable {
  +canFly(): boolean
}

Animal --|> Comparable
Animal --|> Moveable

Fish --|> Animal
Fish --|> Swimable
Fish --|> Eatable


FlyingFish --|> Fish
FlyingFish --|> Flyable
@enduml